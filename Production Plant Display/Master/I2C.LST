C51 COMPILER V9.50a   I2C                                                                  12/06/2015 10:44:33 PAGE 1   


C51 COMPILER V9.50a, COMPILATION OF MODULE I2C
OBJECT MODULE PLACED IN I2C.OBJ
COMPILER INVOKED BY: E:\Keil\C51\BIN\C51.EXE I2C.c BROWSE DEBUG OBJECTEXTEND

line level    source

   1          #include<reg51.h>
   2          #include"types.h"
   3          #include"delay.h"
   4          sbit scl=P0^6;
   5          sbit sda=P0^7;
   6          
   7          void I2C_start(void)
   8          {
   9   1      //start conditon for I2C protocol
  10   1              scl=0;  
  11   1              sda=1;
  12   1              scl=1;
  13   1              sda=0;
  14   1      }
  15          
  16          void I2C_write(u8 dat)
  17          {
  18   1              u8 i;
  19   1              for(i=0;i<8;i++)
  20   1               {
  21   2                      scl=0;
  22   2                      sda=(dat&(0x80>>i))?1:0;
  23   2                      scl=1;
  24   2               }
  25   1      }
  26          
  27          void I2C_ack(void)
  28          {
  29   1              scl=0;
  30   1              sda=1;
  31   1              scl=1;
  32   1              while(sda);
  33   1      }
  34          
  35          void I2C_stop(void)
  36          {
  37   1              scl=0;
  38   1              sda=0;
  39   1              scl=1;
  40   1              sda=1;
  41   1      }
  42          
  43          u8 I2C_read(void)
  44          {
  45   1              u8 buff=0,i;
  46   1              for(i=0;i<8;i++)
  47   1               {
  48   2                      scl=0;
  49   2                      scl=1;
  50   2                      if(sda)
  51   2                        buff|=0x80>>i;
  52   2               }
  53   1              return buff;
  54   1      }
  55          
C51 COMPILER V9.50a   I2C                                                                  12/06/2015 10:44:33 PAGE 2   

  56          void I2C_noack(void)
  57          {
  58   1              scl=0;
  59   1              sda=1;
  60   1              scl=1;
  61   1      }
  62          
  63          void I2C_device_write(u8 s_addr,u8 addr,u8 dat)
  64          {
  65   1              
  66   1              I2C_start();            //Master issue a start condition
  67   1              I2C_write(s_addr);      //Master issues device address with (MSB 1st)
  68   1              I2C_ack();                      //Master takes an acknoledgement
  69   1              I2C_write(addr);        //Master issue address to be written
  70   1              I2C_ack();                      //Master waits for acknowledgement
  71   1              I2C_write(dat);         //Master issue data to be written to tahat address location
  72   1              I2C_ack();                      //Master recive the acknowledgement 
  73   1              I2C_stop();                     //Master issues a stop conditon
  74   1              delay_1ms(10);          //Master needs a delay of 10ms btwn consecutive writes
  75   1      }
  76          
  77          u8 I2c_device_read(u8 s_addr,u8 addr)
  78          {
  79   1              u8 buff=0;                      
  80   1              I2C_start();            //Master issues start condition to begin
  81   1              I2C_write(s_addr);      //Master issue device address
  82   1              I2C_ack();                      //Master recive the acknowledgment
  83   1              I2C_write(addr);        //Master issue address from where data i being read
  84   1              I2C_ack();                      //Master waits for acknowledgement
  85   1              
  86   1              I2C_start();            //Master issues a start condition
  87   1              I2C_write(s_addr|1); //Master issue device address with read option 
  88   1              I2C_ack();                      //Master waits for ack
  89   1              buff=I2C_read();        //Master reads the data from address location
  90   1              I2C_noack();            //Master issue no ack
  91   1              I2C_stop();                     //Master issue a stop
  92   1              return buff;
  93   1      }


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    184    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----    ----
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
