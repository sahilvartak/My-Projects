C51 COMPILER V9.50a   SEVEN_SEG                                                            10/31/2015 23:29:43 PAGE 1   


C51 COMPILER V9.50a, COMPILATION OF MODULE SEVEN_SEG
OBJECT MODULE PLACED IN seven_seg.OBJ
COMPILER INVOKED BY: E:\Keil\C51\BIN\C51.EXE seven_seg.c BROWSE DEBUG OBJECTEXTEND

line level    source

   1          #include<reg51.h>
   2          #include"types.h"
   3          #include"delay.h"
   4          #define data_port P2
   5          
   6          u8 dp1=0xff,dp2=0xff,dp3=0xff,dp4=0xff;
   7          sbit seg_1=P1^0;
   8          sbit seg_2=P1^1;
   9          sbit seg_3=P1^2;
  10          sbit seg_4=P1^3;
  11          sbit seg_5=P1^4;
  12          
  13          u8 lut[]={0xc0,0xf9,0xa4,0xb0,0x99,0x92,0x82,0xf8,0x80,0x90};
  14          void disp_seven_seg(u8 num1,u8 num2,u8 num3,u8 num4,u8 num5)
  15          {
  16   1              seg_1=0;                                                //selecting segments common anode
  17   1              data_port=lut[num1]&dp1;        //sending 1 digit to seven seg 
  18   1              delay_1ms(10);
  19   1              seg_1=1;
  20   1      
  21   1              seg_2=0;                                                        //selecting segments common anode
  22   1              data_port=lut[num2]&dp2;        //sending 2 digit to seven seg 
  23   1              delay_1ms(10);
  24   1              seg_2=1;
  25   1      
  26   1              seg_3=0;                                                                //selecting segments common anode
  27   1              data_port=lut[num3]&dp3;        //sending 3 digit to seven seg 
  28   1              delay_1ms(10);
  29   1              seg_3=1;
  30   1      
  31   1              seg_4=0;                                                                                //selecting segments common anode
  32   1              data_port=lut[num4]&dp4;        //sending 4 digit to seven seg 
  33   1              delay_1ms(10);
  34   1              seg_4=1;
  35   1      
  36   1              seg_5=0;                                                                                //selecting segments common anode
  37   1              data_port=lut[num5]&dp4;        //sending 5 digit to seven seg 
  38   1              delay_1ms(10);
  39   1              seg_5=1;
  40   1      }
  41          
  42          /*void dispf_seven_seg(float num)
  43          {
  44                  u16 i;
  45                  dp1=dp2=dp3=dp4=0xff;
  46          
  47                  if(num>=0.0 && num<=10.0)
  48                   {
  49                          i=num*10000;
  50                          dp1=0x7f;
  51                   }
  52          
  53                   if(num>=10.0 && num<=100.0)
  54                   {
  55                          i=num*1000;
C51 COMPILER V9.50a   SEVEN_SEG                                                            10/31/2015 23:29:43 PAGE 2   

  56                          dp2=0x7f;
  57                   }
  58          
  59                   if(num>=100.0 && num<=1000.0)
  60                   {
  61                          i=num*100;
  62                          dp3=0x7f;
  63                   }
  64          
  65                   if(num>=1000.0 && num<=10000.0)
  66                   {
  67                          i=num*10;
  68                          dp4=0x7f;
  69                   }
  70                   
  71                   disp_seven_seg(i);
  72          } */
  73          
  74          void init_seg()
  75          {
  76   1              u8 i=0;
  77   1              for(i=0;i<=9;i++)
  78   1              { 
  79   2                seg_1=0;seg_2=0;seg_3=0;seg_4=0;seg_5=0;                              //selecting segments common anode
  80   2                data_port=lut[i];     //sending 1 digit to seven seg 
  81   2                delay_1ms(500);
  82   2                seg_1=1;seg_2=2;seg_3=3;seg_4=4;
  83   2                }
  84   1      }


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    157    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =     14       6
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
