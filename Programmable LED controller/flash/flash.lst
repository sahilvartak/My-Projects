;  LST file generated by mikroListExporter - v.2.0 
; Date/Time: 14-Jan-16 9:14:39 PM
;----------------------------------------------

;Address Opcode 	ASM
0x0000	0x286F      	GOTO       111
__Lib_FLASH_w32_e32_Flash_Unlock:
;__Lib_FLASH_w32_e32.c,15 :: 		
;__Lib_FLASH_w32_e32.c,16 :: 		
0x0003	0x3055      	MOVLW      85
0x0004	0x0023      	MOVLB      3
0x0005	0x0096      	MOVWF      PMCON2
;__Lib_FLASH_w32_e32.c,17 :: 		
0x0006	0x30AA      	MOVLW      170
0x0007	0x0096      	MOVWF      PMCON2
;__Lib_FLASH_w32_e32.c,18 :: 		
0x0008	0x1495      	BSF        PMCON1, 1
;__Lib_FLASH_w32_e32.c,19 :: 		
0x0009	0x0000      	NOP
;__Lib_FLASH_w32_e32.c,20 :: 		
0x000A	0x0000      	NOP
;__Lib_FLASH_w32_e32.c,21 :: 		
L_end_Flash_Unlock:
0x000B	0x0008      	RETURN
; end of __Lib_FLASH_w32_e32_Flash_Unlock
___CC2DW:
;__Lib_System.c,71 :: 		
;__Lib_System.c,73 :: 		
_CC2DL_Loop1:
;__Lib_System.c,74 :: 		
0x000C	0x0012      	MOVIW      FSR0++ 
;__Lib_System.c,75 :: 		
0x000D	0x001E      	MOVWI      FSR1++ 
;__Lib_System.c,76 :: 		
0x000E	0x03F0      	DECF       R0, 1
;__Lib_System.c,77 :: 		
0x000F	0x1D03      	BTFSS      STATUS, 2
;__Lib_System.c,78 :: 		
0x0010	0x280C      	GOTO       _CC2DL_Loop1
;__Lib_System.c,79 :: 		
0x0011	0x03F1      	DECF       R1, 1
;__Lib_System.c,80 :: 		
0x0012	0x1D03      	BTFSS      STATUS, 2
;__Lib_System.c,81 :: 		
0x0013	0x280C      	GOTO       _CC2DL_Loop1
;__Lib_System.c,83 :: 		
L_end___CC2DW:
0x0014	0x0008      	RETURN
; end of ___CC2DW
_FLASH_Write:
;__Lib_FLASH_w32_e32.c,32 :: 		
;__Lib_FLASH_w32_e32.c,36 :: 		
0x0015	0x080B      	MOVF       INTCON, 0
0x0016	0x0020      	MOVLB      0
0x0017	0x00C9      	MOVWF      FLASH_Write_savedINTCON_L0
;__Lib_FLASH_w32_e32.c,37 :: 		
0x0018	0x138B      	BCF        INTCON, 7
;__Lib_FLASH_w32_e32.c,39 :: 		
0x0019	0x0023      	MOVLB      3
0x001A	0x1515      	BSF        PMCON1, 2
;__Lib_FLASH_w32_e32.c,40 :: 		
0x001B	0x1315      	BCF        PMCON1, 6
;__Lib_FLASH_w32_e32.c,41 :: 		
0x001C	0x1695      	BSF        PMCON1, 5
;__Lib_FLASH_w32_e32.c,42 :: 		
0x001D	0x0020      	MOVLB      0
0x001E	0x0845      	MOVF       FARG_FLASH_Write_address, 0
0x001F	0x0023      	MOVLB      3
0x0020	0x0091      	MOVWF      PMADR
0x0021	0x0020      	MOVLB      0
0x0022	0x0846      	MOVF       FARG_FLASH_Write_address+1, 0
0x0023	0x0023      	MOVLB      3
0x0024	0x0092      	MOVWF      PMADR+1
;__Lib_FLASH_w32_e32.c,44 :: 		
0x0025	0x0020      	MOVLB      0
0x0026	0x01CA      	CLRF       FLASH_Write_i_L0
L_FLASH_Write0:
0x0027	0x301F      	MOVLW      31
0x0028	0x024A      	SUBWF      FLASH_Write_i_L0, 0
0x0029	0x1803      	BTFSC      STATUS, 0
0x002A	0x2848      	GOTO       L_FLASH_Write1
;__Lib_FLASH_w32_e32.c,45 :: 		
0x002B	0x0847      	MOVF       FARG_FLASH_Write_data_, 0
0x002C	0x0084      	MOVWF      FSR0
0x002D	0x0848      	MOVF       FARG_FLASH_Write_data_+1, 0
0x002E	0x0085      	MOVWF      FSR0H
0x002F	0x0800      	MOVF       INDF0, 0
0x0030	0x0023      	MOVLB      3
0x0031	0x0093      	MOVWF      PMDAT
0x0032	0x3101      	ADDFSR     0, 1
0x0033	0x0800      	MOVF       INDF0, 0
0x0034	0x0094      	MOVWF      PMDAT+1
;__Lib_FLASH_w32_e32.c,46 :: 		
0x0035	0x3002      	MOVLW      2
0x0036	0x0020      	MOVLB      0
0x0037	0x07C7      	ADDWF      FARG_FLASH_Write_data_, 1
0x0038	0x3000      	MOVLW      0
0x0039	0x3DC8      	ADDWFC     FARG_FLASH_Write_data_+1, 1
;__Lib_FLASH_w32_e32.c,47 :: 		
0x003A	0x2003      	CALL       __Lib_FLASH_w32_e32_Flash_Unlock
;__Lib_FLASH_w32_e32.c,48 :: 		
0x003B	0x3001      	MOVLW      1
0x003C	0x0711      	ADDWF      PMADR, 0
0x003D	0x00F0      	MOVWF      R0
0x003E	0x3000      	MOVLW      0
0x003F	0x3D12      	ADDWFC     PMADR+1, 0
0x0040	0x00F1      	MOVWF      R1
0x0041	0x0870      	MOVF       R0, 0
0x0042	0x0091      	MOVWF      PMADR
0x0043	0x0871      	MOVF       R1, 0
0x0044	0x0092      	MOVWF      PMADR+1
;__Lib_FLASH_w32_e32.c,44 :: 		
0x0045	0x0020      	MOVLB      0
0x0046	0x0ACA      	INCF       FLASH_Write_i_L0, 1
;__Lib_FLASH_w32_e32.c,49 :: 		
0x0047	0x2827      	GOTO       L_FLASH_Write0
L_FLASH_Write1:
;__Lib_FLASH_w32_e32.c,50 :: 		
0x0048	0x0023      	MOVLB      3
0x0049	0x1295      	BCF        PMCON1, 5
;__Lib_FLASH_w32_e32.c,51 :: 		
0x004A	0x0020      	MOVLB      0
0x004B	0x0847      	MOVF       FARG_FLASH_Write_data_, 0
0x004C	0x0084      	MOVWF      FSR0
0x004D	0x0848      	MOVF       FARG_FLASH_Write_data_+1, 0
0x004E	0x0085      	MOVWF      FSR0H
0x004F	0x0800      	MOVF       INDF0, 0
0x0050	0x0023      	MOVLB      3
0x0051	0x0093      	MOVWF      PMDAT
0x0052	0x3101      	ADDFSR     0, 1
0x0053	0x0800      	MOVF       INDF0, 0
0x0054	0x0094      	MOVWF      PMDAT+1
;__Lib_FLASH_w32_e32.c,52 :: 		
0x0055	0x2003      	CALL       __Lib_FLASH_w32_e32_Flash_Unlock
;__Lib_FLASH_w32_e32.c,54 :: 		
0x0056	0x1115      	BCF        PMCON1, 2
;__Lib_FLASH_w32_e32.c,55 :: 		
0x0057	0x0020      	MOVLB      0
0x0058	0x1BC9      	BTFSC      FLASH_Write_savedINTCON_L0, 7
0x0059	0x285C      	GOTO       L__FLASH_Write6
0x005A	0x138B      	BCF        INTCON, 7
0x005B	0x285D      	GOTO       L__FLASH_Write7
L__FLASH_Write6:
0x005C	0x178B      	BSF        INTCON, 7
L__FLASH_Write7:
;__Lib_FLASH_w32_e32.c,56 :: 		
L_end_FLASH_Write:
0x005D	0x0008      	RETURN
; end of _FLASH_Write
_FLASH_Read:
;__Lib_FLASH_w32_e32.c,23 :: 		
;__Lib_FLASH_w32_e32.c,24 :: 		
0x005E	0x0020      	MOVLB      0
0x005F	0x0845      	MOVF       FARG_FLASH_Read_address, 0
0x0060	0x0023      	MOVLB      3
0x0061	0x0091      	MOVWF      PMADR
0x0062	0x0020      	MOVLB      0
0x0063	0x0846      	MOVF       FARG_FLASH_Read_address+1, 0
0x0064	0x0023      	MOVLB      3
0x0065	0x0092      	MOVWF      PMADR+1
;__Lib_FLASH_w32_e32.c,25 :: 		
0x0066	0x1315      	BCF        PMCON1, 6
;__Lib_FLASH_w32_e32.c,26 :: 		
0x0067	0x1415      	BSF        PMCON1, 0
;__Lib_FLASH_w32_e32.c,27 :: 		
0x0068	0x0000      	NOP
;__Lib_FLASH_w32_e32.c,28 :: 		
0x0069	0x0000      	NOP
;__Lib_FLASH_w32_e32.c,29 :: 		
0x006A	0x0813      	MOVF       PMDAT, 0
0x006B	0x00F0      	MOVWF      R0
0x006C	0x0814      	MOVF       PMDAT+1, 0
0x006D	0x00F1      	MOVWF      R1
;__Lib_FLASH_w32_e32.c,30 :: 		
L_end_FLASH_Read:
0x006E	0x0008      	RETURN
; end of _FLASH_Read
_main:
0x006F	0x212C      	CALL       300
;flash.c,7 :: 		void main() {
;flash.c,8 :: 		ANSELA  = 0;                         // Configure AN pins as digital
0x0070	0x0023      	MOVLB      3
0x0071	0x018C      	CLRF       ANSELA
;flash.c,9 :: 		ANSELB = 0;
0x0072	0x018D      	CLRF       ANSELB
;flash.c,10 :: 		ANSELC=0;
0x0073	0x018E      	CLRF       ANSELC
;flash.c,11 :: 		C1ON_bit = 0;                       // Disable comparators
0x0074	0x0022      	MOVLB      2
0x0075	0x1391      	BCF        C1ON_bit, BitPos(C1ON_bit+0)
;flash.c,12 :: 		C2ON_bit = 0;
0x0076	0x1393      	BCF        C2ON_bit, BitPos(C2ON_bit+0)
;flash.c,13 :: 		PORTB = 0;                          // Initial PORTB value
0x0077	0x0020      	MOVLB      0
0x0078	0x018D      	CLRF       PORTB
;flash.c,14 :: 		TRISB = 0;                          // Set PORTB as output
0x0079	0x0021      	MOVLB      1
0x007A	0x018D      	CLRF       TRISB
;flash.c,15 :: 		PORTC = 0;                          // Initial PORTC value
0x007B	0x0020      	MOVLB      0
0x007C	0x018E      	CLRF       PORTC
;flash.c,16 :: 		TRISC = 0;                          // Set PORTC as output
0x007D	0x0021      	MOVLB      1
0x007E	0x018E      	CLRF       TRISC
;flash.c,17 :: 		Delay_ms(500);
0x007F	0x3006      	MOVLW      6
0x0080	0x00FB      	MOVWF      R11
0x0081	0x3013      	MOVLW      19
0x0082	0x00FC      	MOVWF      R12
0x0083	0x30AD      	MOVLW      173
0x0084	0x00FD      	MOVWF      R13
L_main0:
0x0085	0x0BFD      	DECFSZ     R13, 1
0x0086	0x2885      	GOTO       L_main0
0x0087	0x0BFC      	DECFSZ     R12, 1
0x0088	0x2885      	GOTO       L_main0
0x0089	0x0BFB      	DECFSZ     R11, 1
0x008A	0x2885      	GOTO       L_main0
0x008B	0x0000      	NOP
0x008C	0x0000      	NOP
;flash.c,27 :: 		addr = 0x0430;                      // starting Flash address, valid for P16F887
0x008D	0x3030      	MOVLW      48
0x008E	0x0020      	MOVLB      0
0x008F	0x00C3      	MOVWF      _addr
0x0090	0x3004      	MOVLW      4
0x0091	0x00C4      	MOVWF      _addr+1
;flash.c,28 :: 		for (i = 0; i < 4; i++){            // Write some data to Flash
0x0092	0x01C0      	CLRF       _i
L_main1:
0x0093	0x3004      	MOVLW      4
0x0094	0x0240      	SUBWF      _i, 0
0x0095	0x1803      	BTFSC      STATUS, 0
0x0096	0x28C6      	GOTO       L_main2
;flash.c,29 :: 		Delay_ms(100);
0x0097	0x3002      	MOVLW      2
0x0098	0x00FB      	MOVWF      R11
0x0099	0x3004      	MOVLW      4
0x009A	0x00FC      	MOVWF      R12
0x009B	0x30BA      	MOVLW      186
0x009C	0x00FD      	MOVWF      R13
L_main4:
0x009D	0x0BFD      	DECFSZ     R13, 1
0x009E	0x289D      	GOTO       L_main4
0x009F	0x0BFC      	DECFSZ     R12, 1
0x00A0	0x289D      	GOTO       L_main4
0x00A1	0x0BFB      	DECFSZ     R11, 1
0x00A2	0x289D      	GOTO       L_main4
0x00A3	0x0000      	NOP
;flash.c,30 :: 		FLASH_Write(addr+i*4, dataAR[i]);
0x00A4	0x0840      	MOVF       _i, 0
0x00A5	0x00F0      	MOVWF      R0
0x00A6	0x01F1      	CLRF       R1
0x00A7	0x35F0      	LSLF       R0, 1
0x00A8	0x0DF1      	RLF        R1, 1
0x00A9	0x35F0      	LSLF       R0, 1
0x00AA	0x0DF1      	RLF        R1, 1
0x00AB	0x0870      	MOVF       R0, 0
0x00AC	0x0743      	ADDWF      _addr, 0
0x00AD	0x00C5      	MOVWF      FARG_FLASH_Write_address
0x00AE	0x0871      	MOVF       R1, 0
0x00AF	0x3D44      	ADDWFC     _addr+1, 0
0x00B0	0x00C6      	MOVWF      FARG_FLASH_Write_address+1
0x00B1	0x3003      	MOVLW      3
0x00B2	0x00F2      	MOVWF      R2
0x00B3	0x0840      	MOVF       _i, 0
0x00B4	0x00F0      	MOVWF      R0
0x00B5	0x01F1      	CLRF       R1
0x00B6	0x0872      	MOVF       R2, 0
L__main12:
0x00B7	0x1903      	BTFSC      STATUS, 2
0x00B8	0x28BD      	GOTO       L__main13
0x00B9	0x35F0      	LSLF       R0, 1
0x00BA	0x0DF1      	RLF        R1, 1
0x00BB	0x3EFF      	ADDLW      255
0x00BC	0x28B7      	GOTO       L__main12
L__main13:
0x00BD	0x3020      	MOVLW      _dataAR
0x00BE	0x0770      	ADDWF      R0, 0
0x00BF	0x00C7      	MOVWF      FARG_FLASH_Write_data_
0x00C0	0x3000      	MOVLW      hi_addr(_dataAR)
0x00C1	0x3D71      	ADDWFC     R1, 0
0x00C2	0x00C8      	MOVWF      FARG_FLASH_Write_data_+1
0x00C3	0x2015      	CALL       _FLASH_Write
;flash.c,28 :: 		for (i = 0; i < 4; i++){            // Write some data to Flash
0x00C4	0x0AC0      	INCF       _i, 1
;flash.c,31 :: 		}
0x00C5	0x2893      	GOTO       L_main1
L_main2:
;flash.c,32 :: 		Delay_ms(500);
0x00C6	0x3006      	MOVLW      6
0x00C7	0x00FB      	MOVWF      R11
0x00C8	0x3013      	MOVLW      19
0x00C9	0x00FC      	MOVWF      R12
0x00CA	0x30AD      	MOVLW      173
0x00CB	0x00FD      	MOVWF      R13
L_main5:
0x00CC	0x0BFD      	DECFSZ     R13, 1
0x00CD	0x28CC      	GOTO       L_main5
0x00CE	0x0BFC      	DECFSZ     R12, 1
0x00CF	0x28CC      	GOTO       L_main5
0x00D0	0x0BFB      	DECFSZ     R11, 1
0x00D1	0x28CC      	GOTO       L_main5
0x00D2	0x0000      	NOP
0x00D3	0x0000      	NOP
;flash.c,34 :: 		addr = 0x0430;
0x00D4	0x3030      	MOVLW      48
0x00D5	0x00C3      	MOVWF      _addr
0x00D6	0x3004      	MOVLW      4
0x00D7	0x00C4      	MOVWF      _addr+1
;flash.c,35 :: 		for (i = 0; i < 16; i++){
0x00D8	0x01C0      	CLRF       _i
L_main6:
0x00D9	0x3010      	MOVLW      16
0x00DA	0x0240      	SUBWF      _i, 0
0x00DB	0x1803      	BTFSC      STATUS, 0
0x00DC	0x2906      	GOTO       L_main7
;flash.c,36 :: 		data_ = FLASH_Read(addr++);       // P16's FLASH is 14-bit wide, so
0x00DD	0x0843      	MOVF       _addr, 0
0x00DE	0x00C5      	MOVWF      FARG_FLASH_Read_address
0x00DF	0x0844      	MOVF       _addr+1, 0
0x00E0	0x00C6      	MOVWF      FARG_FLASH_Read_address+1
0x00E1	0x205E      	CALL       _FLASH_Read
0x00E2	0x0870      	MOVF       R0, 0
0x00E3	0x0020      	MOVLB      0
0x00E4	0x00C1      	MOVWF      _data_
0x00E5	0x0871      	MOVF       R1, 0
0x00E6	0x00C2      	MOVWF      _data_+1
0x00E7	0x0AC3      	INCF       _addr, 1
0x00E8	0x1903      	BTFSC      STATUS, 2
0x00E9	0x0AC4      	INCF       _addr+1, 1
;flash.c,37 :: 		Delay_us(10);                     //   two MSB's will always be '00'
0x00EA	0x3006      	MOVLW      6
0x00EB	0x00FD      	MOVWF      R13
L_main9:
0x00EC	0x0BFD      	DECFSZ     R13, 1
0x00ED	0x28EC      	GOTO       L_main9
0x00EE	0x0000      	NOP
;flash.c,38 :: 		PORTB = data_;                    // Display data on PORTB (LS Byte)
0x00EF	0x0841      	MOVF       _data_, 0
0x00F0	0x008D      	MOVWF      PORTB
;flash.c,39 :: 		PORTC = data_ >> 8;               // and PORTC (MS Byte)
0x00F1	0x0842      	MOVF       _data_+1, 0
0x00F2	0x00F0      	MOVWF      R0
0x00F3	0x01F1      	CLRF       R1
0x00F4	0x0870      	MOVF       R0, 0
0x00F5	0x008E      	MOVWF      PORTC
;flash.c,40 :: 		Delay_ms(500);
0x00F6	0x3006      	MOVLW      6
0x00F7	0x00FB      	MOVWF      R11
0x00F8	0x3013      	MOVLW      19
0x00F9	0x00FC      	MOVWF      R12
0x00FA	0x30AD      	MOVLW      173
0x00FB	0x00FD      	MOVWF      R13
L_main10:
0x00FC	0x0BFD      	DECFSZ     R13, 1
0x00FD	0x28FC      	GOTO       L_main10
0x00FE	0x0BFC      	DECFSZ     R12, 1
0x00FF	0x28FC      	GOTO       L_main10
0x0100	0x0BFB      	DECFSZ     R11, 1
0x0101	0x28FC      	GOTO       L_main10
0x0102	0x0000      	NOP
0x0103	0x0000      	NOP
;flash.c,35 :: 		for (i = 0; i < 16; i++){
0x0104	0x0AC0      	INCF       _i, 1
;flash.c,41 :: 		}
0x0105	0x28D9      	GOTO       L_main6
L_main7:
;flash.c,42 :: 		}
L_end_main:
0x0106	0x2906      	GOTO       $+0
; end of _main
0x012C	0x300A      	MOVLW      10
0x012D	0x0084      	MOVWF      FSR0
0x012E	0x3081      	MOVLW      129
0x012F	0x0085      	MOVWF      FSR0H
0x0130	0x3021      	MOVLW      33
0x0131	0x00F0      	MOVWF      R0
0x0132	0x3001      	MOVLW      1
0x0133	0x00F1      	MOVWF      R1
0x0134	0x3020      	MOVLW      32
0x0135	0x0086      	MOVWF      FSR1
0x0136	0x3000      	MOVLW      0
0x0137	0x0087      	MOVWF      FSR1H
0x0138	0x200C      	CALL       12
0x0139	0x0008      	RETURN
;flash.c,0 :: ?ICS_dataAR
0x010A	0x34AA ;?ICS_dataAR+0
0x010B	0x343F ;?ICS_dataAR+1
0x010C	0x34AB ;?ICS_dataAR+2
0x010D	0x343F ;?ICS_dataAR+3
0x010E	0x34AC ;?ICS_dataAR+4
0x010F	0x343F ;?ICS_dataAR+5
0x0110	0x34AD ;?ICS_dataAR+6
0x0111	0x343F ;?ICS_dataAR+7
0x0112	0x34AE ;?ICS_dataAR+8
0x0113	0x343F ;?ICS_dataAR+9
0x0114	0x34AF ;?ICS_dataAR+10
0x0115	0x343F ;?ICS_dataAR+11
0x0116	0x34B0 ;?ICS_dataAR+12
0x0117	0x343F ;?ICS_dataAR+13
0x0118	0x34B1 ;?ICS_dataAR+14
0x0119	0x343F ;?ICS_dataAR+15
0x011A	0x34B2 ;?ICS_dataAR+16
0x011B	0x343F ;?ICS_dataAR+17
0x011C	0x34B3 ;?ICS_dataAR+18
0x011D	0x343F ;?ICS_dataAR+19
0x011E	0x34B4 ;?ICS_dataAR+20
0x011F	0x343F ;?ICS_dataAR+21
0x0120	0x34B5 ;?ICS_dataAR+22
0x0121	0x343F ;?ICS_dataAR+23
0x0122	0x34B6 ;?ICS_dataAR+24
0x0123	0x343F ;?ICS_dataAR+25
0x0124	0x34B7 ;?ICS_dataAR+26
0x0125	0x343F ;?ICS_dataAR+27
0x0126	0x34B8 ;?ICS_dataAR+28
0x0127	0x343F ;?ICS_dataAR+29
0x0128	0x34B9 ;?ICS_dataAR+30
0x0129	0x343F ;?ICS_dataAR+31
; end of ?ICS_dataAR
;flash.c,0 :: ?ICS_i
0x012A	0x3400 ;?ICS_i+0
; end of ?ICS_i
Symbol List:
//** Routines locations **
//ADDRESS    SIZE    PROCEDURE
//----------------------------------------------
0x0003       [9]    __Lib_FLASH_w32_e32_Flash_Unlock
0x000C       [9]    ___CC2DW
0x0015      [73]    _FLASH_Write
0x005E      [17]    _FLASH_Read
0x006F     [151]    _main
//** Variables locations ** 
//ADDRESS    SIZE    VARIABLE
//----------------------------------------------
0x0000       [1]    INDF0
0x0001       [1]    INDF1
0x0003       [1]    STATUS
0x0004       [1]    FSR0L
0x0005       [1]    FSR0H
0x0006       [1]    FSR1L
0x0007       [1]    FSR1H
0x000A       [1]    PCLATH
0x000B       [1]    INTCON
0x000D       [1]    PORTB
0x000E       [1]    PORTC
0x0020      [32]    _dataAR
0x0040       [1]    _i
0x0041       [2]    _data_
0x0043       [2]    _addr
0x0045       [2]    FARG_FLASH_Read_address
0x0045       [2]    FARG_FLASH_Write_address
0x0047       [2]    FARG_FLASH_Write_data_
0x0049       [1]    FLASH_Write_savedINTCON_L0
0x004A       [1]    FLASH_Write_i_L0
0x0070       [1]    R0
0x0071       [1]    R1
0x0072       [1]    R2
0x0073       [1]    R3
0x0074       [1]    R4
0x0075       [1]    R5
0x0076       [1]    R6
0x0077       [1]    R7
0x0078       [1]    R8
0x0079       [1]    R9
0x007A       [1]    R10
0x007B       [1]    R11
0x007C       [1]    R12
0x007D       [1]    R13
0x007E       [1]    R14
0x007F       [1]    R15
0x008D       [1]    TRISB
0x008E       [1]    TRISC
0x0111       [0]    C1ON_bit
0x0113       [0]    C2ON_bit
0x018C       [1]    ANSELA
0x018D       [1]    ANSELB
0x018E       [1]    ANSELC
0x0191       [2]    PMADR
0x0193       [2]    PMDAT
0x0195       [1]    PMCON1
0x0196       [1]    PMCON2
//** Constants locations ** 
//ADDRESS    SIZE    CONSTANT
//----------------------------------------------
0x010A      [32]    ?ICS_dataAR
0x012A       [1]    ?ICS_i
