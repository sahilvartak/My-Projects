;  LST file generated by mikroListExporter - v.2.0 
; Date/Time: 13-Jan-16 9:53:38 PM
;----------------------------------------------

;Address Opcode 	ASM
0x0000	0x284A      	GOTO       74
_interrupt:
0x0004	0x00FF      	MOVWF      R15
0x0005	0x0E03      	SWAPF      STATUS, 0
0x0006	0x0183      	CLRF       STATUS
0x0007	0x00A5      	MOVWF      ___saveSTATUS
0x0008	0x080A      	MOVF       PCLATH, 0
0x0009	0x00A6      	MOVWF      ___savePCLATH
0x000A	0x018A      	CLRF       PCLATH
;demo.c,43 :: 		void interrupt(){                      // I2C slave interrupt handler
;demo.c,45 :: 		if (PIR1.SSPIF == 1){                // I2C Interrupt
0x000B	0x1D8C      	BTFSS      PIR1, 3
0x000C	0x2828      	GOTO       L_interrupt0
;demo.c,46 :: 		PIR1.SSPIF = 0;                    // reset SSP interrupt flag
0x000D	0x118C      	BCF        PIR1, 3
;demo.c,49 :: 		if (SSPSTAT.R_W == 1){             // Read request from master
0x000E	0x1683      	BSF        STATUS, 5
0x000F	0x1D14      	BTFSS      SSPSTAT, 2
0x0010	0x2818      	GOTO       L_interrupt1
;demo.c,50 :: 		SSPBUF = tx_data;                // Get data to send
0x0011	0x1283      	BCF        STATUS, 5
0x0012	0x0824      	MOVF       _tx_data, 0
0x0013	0x0093      	MOVWF      SSPBUF
;demo.c,51 :: 		SSPCON.CKP = 1;                  // Release SCL line
0x0014	0x1614      	BSF        SSPCON, 4
;demo.c,52 :: 		j = SSPBUF;                      // That's it
0x0015	0x0813      	MOVF       SSPBUF, 0
0x0016	0x00A2      	MOVWF      _j
;demo.c,53 :: 		return;
0x0017	0x282B      	GOTO       L__interrupt9
;demo.c,54 :: 		}
L_interrupt1:
;demo.c,55 :: 		if (SSPSTAT.BF == 0){              // all done,
0x0018	0x1683      	BSF        STATUS, 5
0x0019	0x1814      	BTFSC      SSPSTAT, 0
0x001A	0x281F      	GOTO       L_interrupt2
;demo.c,56 :: 		j = SSPBUF;                      // Nothing in buffer so exit
0x001B	0x1283      	BCF        STATUS, 5
0x001C	0x0813      	MOVF       SSPBUF, 0
0x001D	0x00A2      	MOVWF      _j
;demo.c,57 :: 		return;
0x001E	0x282B      	GOTO       L__interrupt9
;demo.c,58 :: 		}
L_interrupt2:
;demo.c,61 :: 		if (SSPSTAT.D_A == 1){             // Data [not address]
0x001F	0x1683      	BSF        STATUS, 5
0x0020	0x1E94      	BTFSS      SSPSTAT, 5
0x0021	0x2828      	GOTO       L_interrupt3
;demo.c,62 :: 		rxbuffer = SSPBUF;               // get data
0x0022	0x1283      	BCF        STATUS, 5
0x0023	0x0813      	MOVF       SSPBUF, 0
0x0024	0x00A3      	MOVWF      _rxbuffer
;demo.c,63 :: 		j = SSPBUF;                      // read buffer to clear flag [address]
0x0025	0x0813      	MOVF       SSPBUF, 0
0x0026	0x00A2      	MOVWF      _j
;demo.c,64 :: 		return;
0x0027	0x282B      	GOTO       L__interrupt9
;demo.c,65 :: 		}
L_interrupt3:
;demo.c,66 :: 		}
L_interrupt0:
0x0028	0x1283      	BCF        STATUS, 5
;demo.c,67 :: 		j = SSPBUF;                              // read buffer to clear flag [address]
0x0029	0x0813      	MOVF       SSPBUF, 0
0x002A	0x00A2      	MOVWF      _j
;demo.c,68 :: 		}
L_end_interrupt:
L__interrupt9:
0x002B	0x0826      	MOVF       ___savePCLATH, 0
0x002C	0x008A      	MOVWF      PCLATH
0x002D	0x0E25      	SWAPF      ___saveSTATUS, 0
0x002E	0x0083      	MOVWF      STATUS
0x002F	0x0EFF      	SWAPF      R15, 1
0x0030	0x0E7F      	SWAPF      R15, 0
0x0031	0x0009      	RETFIE
; end of _interrupt
_Init:
;demo.c,24 :: 		void Init(){
;demo.c,25 :: 		ADCON1 = 0;                          // All ports set to digital
0x0032	0x1683      	BSF        STATUS, 5
0x0033	0x1303      	BCF        STATUS, 6
0x0034	0x019F      	CLRF       ADCON1
;demo.c,26 :: 		TRISA = 0;                           // Set PORTA as output
0x0035	0x0185      	CLRF       TRISA
;demo.c,27 :: 		TRISB = 0;                           // Set PORTB as output
0x0036	0x0186      	CLRF       TRISB
;demo.c,28 :: 		TRISC = 0xFF;                        // Set PORTC as input
0x0037	0x30FF      	MOVLW      255
0x0038	0x0087      	MOVWF      TRISC
;demo.c,29 :: 		SSPADD =  Addy;                      // Get address (7bit). Lsb is read/write flag
0x0039	0x30D2      	MOVLW      210
0x003A	0x0093      	MOVWF      SSPADD
;demo.c,30 :: 		SSPCON = 0x36;                       // Set to I2C slave with 7-bit address
0x003B	0x3036      	MOVLW      54
0x003C	0x1283      	BCF        STATUS, 5
0x003D	0x0094      	MOVWF      SSPCON
;demo.c,31 :: 		PIE1.SSPIF = 1;                      // enable SSP interrupts
0x003E	0x1683      	BSF        STATUS, 5
0x003F	0x158C      	BSF        PIE1, 3
;demo.c,32 :: 		INTCON = 0xC0;                       // enable INTCON.GIE
0x0040	0x30C0      	MOVLW      192
0x0041	0x008B      	MOVWF      INTCON
;demo.c,35 :: 		INTCON.GIE = 1;
0x0042	0x178B      	BSF        INTCON, 7
;demo.c,36 :: 		INTCON.PEIE = 1;
0x0043	0x170B      	BSF        INTCON, 6
;demo.c,37 :: 		PIE1.SSPIE = 1;                      // enable SSP interrupts
0x0044	0x158C      	BSF        PIE1, 3
;demo.c,38 :: 		PIE1.TMR1IE = 1;
0x0045	0x140C      	BSF        PIE1, 0
;demo.c,39 :: 		PIR1.TMR1IF = 0;
0x0046	0x1283      	BCF        STATUS, 5
0x0047	0x100C      	BCF        PIR1, 0
;demo.c,40 :: 		PIR1.SSPIF = 0;
0x0048	0x118C      	BCF        PIR1, 3
;demo.c,41 :: 		}
L_end_Init:
0x0049	0x0008      	RETURN
; end of _Init
_main:
;demo.c,70 :: 		void main(){
;demo.c,71 :: 		Init();
0x004A	0x2032      	CALL       _Init
;demo.c,72 :: 		while(1){
L_main4:
;demo.c,74 :: 		PORTB   = rxbuffer;
0x004B	0x0823      	MOVF       _rxbuffer, 0
0x004C	0x0086      	MOVWF      PORTB
;demo.c,75 :: 		tx_data = PORTC;
0x004D	0x0807      	MOVF       PORTC, 0
0x004E	0x00A4      	MOVWF      _tx_data
;demo.c,76 :: 		Delay_ms(Delay_Time);
0x004F	0x3003      	MOVLW      3
0x0050	0x00FB      	MOVWF      R11
0x0051	0x308A      	MOVLW      138
0x0052	0x00FC      	MOVWF      R12
0x0053	0x3055      	MOVLW      85
0x0054	0x00FD      	MOVWF      R13
L_main6:
0x0055	0x0BFD      	DECFSZ     R13, 1
0x0056	0x2855      	GOTO       L_main6
0x0057	0x0BFC      	DECFSZ     R12, 1
0x0058	0x2855      	GOTO       L_main6
0x0059	0x0BFB      	DECFSZ     R11, 1
0x005A	0x2855      	GOTO       L_main6
0x005B	0x0000      	NOP
0x005C	0x0000      	NOP
;demo.c,77 :: 		}
0x005D	0x284B      	GOTO       L_main4
;demo.c,78 :: 		}
L_end_main:
0x005E	0x285E      	GOTO       $+0
; end of _main
Symbol List:
//** Routines locations **
//ADDRESS    SIZE    PROCEDURE
//----------------------------------------------
0x0004      [46]    _interrupt
0x0032      [24]    _Init
0x004A      [21]    _main
//** Variables locations ** 
//ADDRESS    SIZE    VARIABLE
//----------------------------------------------
0x0000       [1]    INDF
0x0003       [1]    STATUS
0x0004       [1]    FSR
0x0006       [1]    PORTB
0x0007       [1]    PORTC
0x000A       [1]    PCLATH
0x000B       [1]    INTCON
0x000C       [1]    PIR1
0x0013       [1]    SSPBUF
0x0014       [1]    SSPCON
0x0020       [2]    ___DoICPAddr
0x0022       [1]    _j
0x0023       [1]    _rxbuffer
0x0024       [1]    _tx_data
0x0025       [1]    ___saveSTATUS
0x0026       [1]    ___savePCLATH
0x0070       [1]    R0
0x0071       [1]    R1
0x0072       [1]    R2
0x0073       [1]    R3
0x0074       [1]    R4
0x0075       [1]    R5
0x0076       [1]    R6
0x0077       [1]    R7
0x0078       [1]    R8
0x0079       [1]    R9
0x007A       [1]    R10
0x007B       [1]    R11
0x007C       [1]    R12
0x007D       [1]    R13
0x007E       [1]    R14
0x007F       [1]    R15
0x0085       [1]    TRISA
0x0086       [1]    TRISB
0x0087       [1]    TRISC
0x008C       [1]    PIE1
0x0093       [1]    SSPADD
0x0094       [1]    SSPSTAT
0x009F       [1]    ADCON1
